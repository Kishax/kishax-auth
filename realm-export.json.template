{
  "realm": "kishax",
  "displayName": "Kishax Authentication",
  "displayNameHtml": "<strong>Kishax</strong> Authentication",
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": true,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "defaultRoles": ["offline_access", "uma_authorization"],
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "smtpServer": {
    "host": "${SMTP_HOST}",
    "port": "${SMTP_PORT}",
    "from": "${SMTP_FROM}",
    "fromDisplayName": "${SMTP_FROM_DISPLAY_NAME}",
    "user": "${SMTP_USER}",
    "password": "${SMTP_PASSWORD}",
    "ssl": "${SMTP_SSL}",
    "starttls": "${SMTP_STARTTLS}"
  },
  "users": [],
  "identityProviders": [
    {
      "alias": "github",
      "displayName": "GitHub",
      "providerId": "github",
      "enabled": true,
      "updateProfileFirstLoginMode": "off",
      "trustEmail": true,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "config": {
        "clientId": "${GITHUB_CLIENT_ID}",
        "clientSecret": "${GITHUB_CLIENT_SECRET}",
        "syncMode": "IMPORT"
      }
    }
  ],
  "identityProviderMappers": [
    {
      "name": "github-id-mapper",
      "identityProviderAlias": "github",
      "identityProviderMapper": "github-user-attribute-mapper",
      "config": {
        "syncMode": "FORCE",
        "jsonField": "id",
        "userAttribute": "username"
      }
    },
    {
      "name": "github-login-mapper",
      "identityProviderAlias": "github",
      "identityProviderMapper": "github-user-attribute-mapper",
      "config": {
        "syncMode": "FORCE",
        "jsonField": "login",
        "userAttribute": "github_username"
      }
    },
    {
      "name": "github-email-mapper", 
      "identityProviderAlias": "github",
      "identityProviderMapper": "github-user-attribute-mapper",
      "config": {
        "syncMode": "INHERIT",
        "jsonField": "email",
        "userAttribute": "email"
      }
    },
    {
      "name": "github-name-mapper",
      "identityProviderAlias": "github", 
      "identityProviderMapper": "github-user-attribute-mapper",
      "config": {
        "syncMode": "FORCE",
        "jsonField": "name",
        "userAttribute": "firstName"
      }
    }
  ],
  "clients": [
    {
      "id": "iam-identity-center-client",
      "clientId": "${IAM_IDENTITY_CENTER_ISSUER_URL}",
      "name": "IAM Identity Center SAML Client",
      "description": "SAML client for AWS IAM Identity Center integration",
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "protocol": "saml",
      "publicClient": false,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "authorizationServicesEnabled": false,
      "frontchannelLogout": false,
      "attributes": {
        "saml.assertion.signature": "true",
        "saml.server.signature": "true",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.authnstatement": "true",
        "saml.onetimeuse.condition": "false",
        "saml_force_name_id_format": "true",
        "saml_name_id_format": "email",
        "saml.force.post.binding": "true"
      },
      "redirectUris": ["${IAM_IDENTITY_CENTER_ACS_URL}"],
      "adminUrl": "${IAM_IDENTITY_CENTER_ACS_URL}",
      "protocolMappers": [
        {
          "name": "username",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "email",
            "friendly.name": "username",
            "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"
          }
        },
        {
          "name": "email",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "email",
            "friendly.name": "email",
            "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"
          }
        },
        {
          "name": "github_id",
          "protocol": "saml",
          "protocolMapper": "saml-user-attribute-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "github_id",
            "friendly.name": "github_id",
            "attribute.name": "https://kishax.net/SAML/Attributes/GitHubID"
          }
        },
        {
          "name": "firstName",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "firstName",
            "friendly.name": "firstName",
            "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"
          }
        },
        {
          "name": "lastName",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "lastName",
            "friendly.name": "lastName",
            "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname"
          }
        }
      ]
    }
  ],
  "clientScopes": [
    {
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper", 
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "profile", 
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true", 
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName", 
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": ["role_list", "profile", "email"],
  "defaultOptionalClientScopes": ["offline_access", "address", "phone", "microprofile-jwt"],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant", 
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "authenticationFlows": [
    {
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "flowAlias": "forms",
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "flowAlias": "Browser - Conditional OTP",
          "requirement": "CONDITIONAL",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ]
}
