services:
  postgres:
    image: postgres:15-alpine
    container_name: kishax-keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    build: .
    container_name: kishax-keycloak
    environment:
      # Admin Configuration
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      # Database Configuration
      KC_DB: ${KC_DB}
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}

      # HTTP Configuration
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_HTTP_ENABLED: ${KC_HTTP_ENABLED}
      KC_HTTP_PORT: ${KC_HTTP_PORT}
      KC_HTTPS_PORT: ${KC_HTTPS_PORT}

      # Proxy Configuration
      KC_PROXY: ${KC_PROXY}
      KC_HOSTNAME_STRICT: ${KC_HOSTNAME_STRICT}
      KC_HOSTNAME_STRICT_HTTPS: ${KC_HOSTNAME_STRICT_HTTPS}

      # Variable Substitution for realm import
      KC_SPI_THEME_CACHE_THEMES: false
      KC_SPI_THEME_CACHE_TEMPLATES: false

      # Environment variables for template processing
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}

      # Logging
      KC_LOG_LEVEL: ${KC_LOG_LEVEL}

      # Email/SMTP Configuration
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_SSL: ${SMTP_SSL}
      SMTP_STARTTLS: ${SMTP_STARTTLS}
      SMTP_FROM: ${SMTP_FROM}
      SMTP_FROM_DISPLAY_NAME: ${SMTP_FROM_DISPLAY_NAME}

    ports:
      - "3000:3000"
      - "8443:8443"
      - "9000:9000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak-network
    volumes:
      - ./themes:/opt/keycloak/themes:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /auth/health/ready HTTP/1.1\r\nHost: localhost\r\n\r\n' >&3 && timeout 1 cat <&3 | grep -q '200 OK'",
        ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

networks:
  keycloak-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
